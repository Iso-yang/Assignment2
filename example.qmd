---
title: "assignment2"
format: html
editor: visual
---

# Introduction

This guide demonstrates my understanding of Git, GitHub, and the command-line interface in the context of reproducible research using RStudio and Quarto.

------------------------------------------------------------------------

# Step 1: Create a new RStudio Project and a Quarto file

-   I created a new RStudio project named `Assignment2`.
-   Inside the project, I created a file `example.qmd` that can be knitted into a HTML file.
![](images/HTML_file.jpg)

# Step 2: Initialise the Git repository and push to GitHub

git init: Initialize a Git repository in the current folder. Git starts tracking files and version history.
git add .: Add all changes in the current directory to the staging area.
git commit -m "Initial commit": Submit the contents of the staging area as a new version.
git branch -M main: Rename the current branch to main.
git remote add origin git@github.com:Iso-yang/Assignment2.git: Add a remote repository named origin. Link the local and remote repositories.
git push -u origin main: Push the local main branch code to the remote repository origin.

# Step 3: Create a new branch and modify example.qmd.
git checkout -b testbranch: Create a new branch called testbranch . 
git add example.qmd
git commit -m "Modified qmd in testbranch"
git push origin testbranch: Pushed the testbranch branch to the remote repository.


# Step 4: Add data folder and amend commit
Create a folder called data, and add the data from Assignment 1 to that folder.
git add .
git commit -m"create a folder"
git push origin testbranch

# Step 5: Make conflicting change on main
motify in testbranch


# Step 6: Merge and resolve conflict


# Step 7: Tag the commit




# Step 8: Delete testbranch



# Step 9: Show commit log


# Step 10: Undo commit but keep changes